{ config, options, pkgs, lib, ... }:

with lib;
with lib.my;
let cfg = config.modules.shell.nushell;
    configDir = config.nixos-config.configDir;
in {
  options.modules.shell.nushell = with types; {
    enable = mkBoolOpt false;
    rcFiles  = mkOpt (listOf (either str path)) [];
    aliases  = mkOpt (attrsOf (either str path)) {};
  };

  config = mkIf cfg.enable ( mkMerge [
    (linuxXorDarwin
      {
        users.defaultUserShell = pkgs.unstable.nushell;
      }

      {
        user.shell = pkgs.unstable.nushell;
      }
    )

    {

      environment.systemPackages = with pkgs; [
        zoxide
        fd
        ripgrep
        lsof
        starship
      ];


      home.configFile = {
        # Write it recursively so other modules can write files to it
        "nushell" = { source = "${configDir}/nushell"; recursive = true; };
        "nushell/extra.nu".text =
          let aliasLines = mapAttrsToList (n: v: "alias ${n} = ${v}") cfg.aliases;
          in
          ''
            # This file was autogenerated, do not edit it!
            ${concatStringsSep "\n" aliasLines}
            ${concatMapStrings (path: "source '${path}'\n") cfg.rcFiles}
          '';

      };

  }]);
}
