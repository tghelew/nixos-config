general {
# disables the loading bar on the bottom of the screen while hyprlock is booting up.    bool    false
    disable_loading_bar = false
    # hides the cursor instead of making it visible     bool    false
    hide_cursor = true
    # the amount of seconds for which the lockscreen will unlock on mouse movement.     int  0
    grace = 2
    # disables the fadein animation     bool    false
    no_fade_in = false
    # disables the fadeout animation    bool    false
    no_fade_out = false
    # skips validation when no password is provided     bool    false
    ignore_empty_input = true
    # makes hyprlock immediately start to draw widgets.
    # Backgrounds will render background:color until their background:path resource is available    bool    false
    immediate_render = false

    # sets if the text should be trimmed, useful to avoid trailing newline in commands output	bool	true
    text_trim = true

    # whether to use fractional scaling. 0 - disabled,                             1 - enabled, 2 - auto	int	2
    fractional_scaling = 2
}

background {
    # monitor to draw on  str  [[Empty]]
    monitor=
    # image path, screenshot or empty to fill with color  str  [[Empty]]
    path = $XDG_DATA_HOME/wallpapers/current
    # fallback background color  color  rgba(                                      17,                                            17,            17, 1.0)
    color = rgb(e5e9f0) # grey
    # _passes  the amount of passes to perform. 0 disables blurring  int  0
    blur_passes =                                                                  1
    #  blur size (distance)  int  7
    blur_size =                                                                    12
    # how much noise to apply  float  0.0                                          1                                              17
    noise = 0.0                                                                    1                                              17
    # contrast modulation for blur  float  0.89                                    16
    contrast = 0.89                                                                16
    # brightness modulation for blur  float  0.8                                   172
    brightness = 0.8                                                               172
    # Increase saturation of blurred colors  float  0.                             1696
    vibrancy = 0.                                                                  1696
    # How strong the effect of vibrancy is on dark areas  float  0.05
    vibrancy_darkness = 0.05
    zindex = -1
}

input-field {
    # monitor to draw on  str  [[Empty]]
    monitor  =
    # size of the input field.  layoutxy  400, 90
    size = 200 50
    # thickness of the outline  int  4
    outline_thickness = 6
    # size of the dots. [0.2 - 0.8]  float  0.25
    dots_size  = 0.3
    # spacing between dots. [-                                                     1.0 -                                          1.0]  float  0.15
    dots_spacing = 0.2
    # whether to center the dots. align left otherwise  bool  true
    dots_center = true
    # rounding of the dots  int  -                                                 1
    dots_rounding  =                                                               16
    # Milliseconds until a dot fully fades in  int  200
    dots_fade_time = 200
    # text character(s) used for the input indicator, rounded rectangles are the default.  str  [[Empty]]
    dots_text_format =
    # border color  gradient  rgba(                                                17,                                            17,            17, 1.0)
    outer_color = rgb(3b4252) #black
    # color of the inner box  color  rgba(200, 200, 200,                           1.0)
    inner_color = rgb(6d84ab) #dimGrey
    # color of the font  color  rgba(                                              10,                                            10,            10, 1.0)
    font_color = rgb(3b4252)
    # font family  str  Noto Sans
    font_family = "Fira Code"
    # fade the input field when empty  bool  true
    fade_on_empty = true
    # milliseconds before fade_on_empty is triggered  int  2000
    fade_timeout = 2000
    # text rendered in the input box when itâ€™s empty  str  <i>Input Password...</i>
    placeholder_text =
    # render an input indicator similar to swaylock instead of dots when set to true  bool  false
    hide_input = falsej
    # -                                                                            1 means complete rounding (circle/oval)  int  -1
    rounding = -                                                                   1
    # color accent when waiting for the authentication result  gradient  rgba(204, 136, 34,                                       1.0)
    check_color = rgb(8                                                            1a                                             1c             1)  #blue
    # color accent when authentication fails  gradient  rgba(204, 34, 34,          1.0)
    fail_color =  rgb(94545d)  #dimRed
    # text rendered when authentication fails  str  <i>$FAIL <b>($ATTEMPTS)</b></i>
    fail_text = "<i>$FAIL <b>($ATTEMPTS)</b></i>"
    # milliseconds before fail_text and fail_color disappears  int  2000
    fail_timeout =                                                                 1000
    # transition time in ms between normal outer_color and fail_color  int  300
    fail_transition = 300
    # color accent when capslock is active  gradient  [[Empty]]
    capslock_color = rgb(ebcb8b) #yellow
    # color accent when numlock is active  gradient  [[Empty]]
    numlock_color  = rgb(ebcb8b) #yellow
    # color accent when both locks are active  gradient  [[Empty]]
    bothlock_color =  rgb(ebcb8b)   # brightyellow
    # change color if numlock is off  bool  false
    invert_numlock = false
    # swap font and inner colors on color change events  bool  false
    swap_font_color  = false
    # position of the input field  layoutxy  0, 0
    position  = 0, 0
    # horizontal alignment  str  center
    halign = center
    # vertical alignment  str  center
    valign = center
    # z-index of the widget  int  0
    zindex = 1
}

label {
    # monitor to draw on  str  [[Empty]]
    monitor  =
    # text to render  str  Sample Text
    text = $DESC
    # multi-line text alignment inside label container. center/right or any value for default left.  str  center
    text_align = right
    # color of the text  color  rgba(254, 254, 254,                                    1.0)
    color = rgb(e5e9f0)  #white
    # size of the font  int                                                            16
    font_size =  24
    # font family  str  Sans
    font_family = "Fira Code"
    # rotation in degrees, counter-clockwise  int  0
    rotate = 0
    # position of the label  layoutxy  0, 0
    position = -110 150
    # horizontal alignment  str  center
    halign = right
    # vertical alignment  str  center
    valign = bottom

}
label {
    # monitor to draw on  str  [[Empty]]
    monitor  =
    # text to render  str  Sample Text
    text = cmd[update:1000] echo "<b>$TIME</b>"
    # multi-line text alignment inside label container. center/right or any value for default left.  str  center
    text_align = left
    # color of the text  color  rgba(254, 254, 254,                                    1.0)
    color = rgb(e5e9f0)  #white
    # size of the font  int                                                            16
    font_size =  32
    # font family  str  Sans
    font_family = "Fira Code"
    # rotation in degrees, counter-clockwise  int  0
    rotate = 0
    # position of the label  layoutxy  0, 0
    position = -100 100
    # horizontal alignment  str  center
    halign = right
    # vertical alignment  str  center
    valign = bottom

}
